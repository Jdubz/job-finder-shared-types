name: Publish to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on npm
          if npm view "@jsdubzw/job-finder-shared-types@$PACKAGE_VERSION" version 2>/dev/null; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version $PACKAGE_VERSION already published"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "New version $PACKAGE_VERSION ready to publish"
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version-check.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.version-check.outputs.version }}" -m "Release v${{ steps.version-check.outputs.version }}"
          git push origin "v${{ steps.version-check.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip publishing
        if: steps.version-check.outputs.changed == 'false'
        run: echo "Skipping publish - version ${{ steps.version-check.outputs.version }} already exists on npm"
